extends layout

block content
  h3 Account info of #{account}
  //- table.table
  //-   tr
  //-     td Balance:
  //-     td #{tokenformatter.format(balance.balance)}
  
  .row
    .col-md-10      
      h3 Tokens Account

  .row
    .col-md-12
      .table-responsive
        table.table
          tr
            th Address
            th TokenAddress
            th Balance
          for account in accounts
            tr
              td
                a(href="/account/" + account.address) #{account.address}
              td #{account.tokenAddress}
              td #{ethformatter.format(account.value)}

  .row
    .col-md-10      
      h3 Recent Transactions
    .col-md-1
      if transOffset - stepSize >= 0
        a.btn.btn-default(href="/account/" + account + '?transOffset=' + (parseInt(transOffset)-parseInt(stepSize))+`&minerOffset=${minerOffset}&uncleOffset=${uncleOffset}`) Previous
    .col-md-1
      if transactions.length - stepSize >= 0
        a.btn.btn-default(href="/account/" + account + '?transOffset=' + (parseInt(transOffset)+parseInt(stepSize))+`&minerOffset=${minerOffset}&uncleOffset=${uncleOffset}`) Next

  .row
    .col-md-12
      .table-responsive
        table.table
          tr
            th TX Hash
            //- th Block #
            th From
            th To
            th Value
            th Gas Used
          for transaction in transactions
            tr
              td
                a(href="/transaction/" + transaction.hash) #{transaction.hash}
              td
                a(href="/account/" + transaction.from) #{hashFormatter.format(transaction.from)}
              
                if transaction.eto
                  td 
                    a(href="/account/" + transaction.eto) #{hashFormatter.format(transaction.eto)}
                  td #{tokenformatter.format(transaction.evalue,transaction.decimals)} #{transaction.name}
                else
                  td
                    a(href="/account/" + transaction.to) #{hashFormatter.format(transaction.to)}
                  td #{ethformatter.format(transaction.value)}

              td #{gasformatter.format(transaction.gas)}
           
  .row
    .col-md-10      
      h3 Mining Records
    .col-md-1
      if minerOffset - stepSize >= 0
        a.btn.btn-default(href="/account/" + account + '?minerOffset=' + (parseInt(minerOffset)-parseInt(stepSize))+`&uncleOffset=${uncleOffset}&transOffset=${transOffset}`) Previous
    .col-md-1
      if miningRecord.length - stepSize >= 0
        a.btn.btn-default(href="/account/" + account + '?minerOffset=' + (parseInt(minerOffset)+parseInt(stepSize))+`&uncleOffset=${uncleOffset}&transOffset=${transOffset}`) Next
  .row
    .col-md-12
      .table-responsive
        table.table
          tr
            th Block
            th Difficulty
            th Date
            th Foundation Reward
            th Miner Reward
            th Total Reward
          for record in miningRecord
            tr
              td 
                a(href="/block/" + record.height) #{record.height}
              td #{diffformatter.format(record.difficulty)}
              td #{moment(record.timestamp * 1000).fromNow()}
              td #{record.foundation} SIPC
              td #{parseFloat(record.txnFees) + parseFloat(record.uncleInclusionRewards) + parseFloat(record.minerReward)} SIPC
              td #{record.totalReward} SIPC
  .row
    .col-md-10      
      h3 Uncles Records
    .col-md-1
      if uncleOffset - stepSize >= 0
        a.btn.btn-default(href="/account/" + account + '?uncleOffset=' + (parseInt(uncleOffset)-parseInt(stepSize))+`&minerOffset=${minerOffset}&transOffset=${transOffset}`) Previous
    .col-md-1
      if unclesRecord.length - stepSize >= 0
        a.btn.btn-default(href="/account/" + account + '?uncleOffset=' + (parseInt(uncleOffset)+parseInt(stepSize))+`&minerOffset=${minerOffset}&transOffset=${transOffset}`) Next
  .row
    .col-md-12
      .table-responsive
        table.table
          tr
            th Uncle Number
            th Block
            th Difficulty
            th Date
            th Reward
          for uncle in unclesRecord
            tr
              td 
                a(href="/uncle/" + uncle.hash) #{uncle.number}
              td
                a(href="/block/" + uncle.blockNumber) #{uncle.blockNumber}
              td #{diffformatter.format(uncle.difficulty.toString())}
              td #{moment(uncle.timestamp * 1000).fromNow()}
              td #{uncle.reward} SIPC